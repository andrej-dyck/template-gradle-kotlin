# GitHub Actions Workflow responsible for cleaning up the Template repository from
# the template-specific files and configurations.
# This workflow is supposed to be triggered automatically when a new template-based
# repository has been created.

name: Template Cleanup
on:
  push:
    branches:
      - main

jobs:
  template-cleanup:
    name: Template Cleanup
    runs-on: ubuntu-latest
    # Run cleaning process only if workflow is triggered by another repository
    if: github.event.repository.name != 'template-gradle-kotlin'
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      # Cleanup project
      - name: Cleanup
        run: |
          export LC_CTYPE=C
          export LANG=C
          # Prepare variables
          NAME="${GITHUB_REPOSITORY##*/}"
          ACTOR=$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')
          SAFE_NAME=$(echo $NAME | sed 's/-/\./g' | sed 's/[^a-zA-Z0-9\.]//g' | tr '[:upper:]' '[:lower:]')
          SAFE_ACTOR=$(echo $ACTOR | sed 's/-/\./g' | sed 's/[^a-zA-Z0-9\.]//g' | tr '[:upper:]' '[:lower:]')
          GROUP="$SAFE_ACTOR.$SAFE_NAME"

          # Replace placeholders in the template-cleanup files
          sed -i "s/%ACTOR%/$ACTOR/g" .github/template-cleanup-files/*
          sed -i "s/%NAME%/$NAME/g" .github/template-cleanup-files/*
          sed -i "s/%REPOSITORY%/${GITHUB_REPOSITORY/\//\\/}/g" .github/template-cleanup-files/*
          sed -i "s/%GROUP%/$GROUP/g" .github/template-cleanup-files/*

          # Replace group name in build.gradle.kts
          sed -i "s/ad.template.gradle.kotlin/$GROUP/g" build.gradle.kts

          # Move content
          cp -R .github/template-cleanup-files/* .

          # Cleanup
          rm -rf \
            .github/template-cleanup-files \
            .github/workflows/template-cleanup.yml \
            src/* \
            test/* \
            gradle-kotlin-logo.jpeg

          # Keep src/ and test/
          mkdir -p "src/$GROUP"
          touch "src/$GROUP/.keep"
          mkdir -p "test/$GROUP"
          touch "test/$GROUP/.keep"

          # Remove leftover empty directories
          find . -type d -empty -delete

      # Commit modified files
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit --amend -m "Setup kotlin gradle project"

      # Push changes
      - name: Force push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}